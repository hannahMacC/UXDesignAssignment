@using System.Text.Json
@model List<Sauna>
@{
    ViewData["Title"] = "Find a Sauna";
}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
      integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
      crossorigin="" />


<div class="mb-3">
    <h1 class="display-4">Find a Sauna</h1>
    <p>Use the filters and map to explore Scotland's outdoor saunas. Click a pin for full details of the sauna</p>
</div>

<div class="container">
    <div class="row g-4 mb-3">
        <div class="col">
            <label class="form-label">Region</label>
            <select id="regionFilter" class="form-select">
                <option>All Regions</option>
                <option>Highlands</option>
                <option>Islands</option>
                <option>Central Belt</option>
                <option>North East</option>
                <option>South West</option>

            </select>
        </div>
        <div class="col">
            <label class="form-label">Water Access</label>
            <select id="waterFilter" class="form-select">
                <option>Any</option>
                <option>Loch/Sea</option>
                <option>Plunge Tub</option>
                <option>No Direct Water</option>
            </select>
        </div>
        <div class="col">
            <label class="form-label">Heat Source</label>
            <select id="heatFilter" class="form-select">
                <option>Any</option>
                <option>Wood-Fired</option>
                <option>Electric</option>
            </select>
        </div>
        <div class="col">
            <label class="form-label">&nbsp;</label>
            <button id="nearMe" class="btn btn-outline-dark w-100">
                Near me
            </button>
        </div>
        <div class="col">
            <label class="form-label">&nbsp;</label>
            <button id="resetFilters" class="btn btn-primary w-100">
                Reset
            </button>
        </div>
    </div>
</div>

<section>
    <div class=" row g-4">
        <div class="col-lg-7">
            <div id="map">
            </div>
        </div>
    </div>
    
</section>


<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>

<script>

    const SAUNAS = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model,
        new System.Text.Json.JsonSerializerOptions { PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase }
    ));

    var map = L.map('map').setView([56.8, -4.3], 6);

        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    // var marker = L.marker([57.14, -2.07]).addTo(map); test marker works

    const markerLayer = L.layerGroup().addTo(map);

    function addMarkers(list) {
      markerLayer.clearLayers();
      const bounds = [];
      list.forEach(s => {
        if (typeof s.latitude !== 'number' || typeof s.longitude !== 'number') return;
        const m = L.marker([s.latitude, s.longitude])
          .addTo(markerLayer)
          .bindPopup(`<strong>${s.name ?? 'Unnamed Sauna'}</strong><br>${s.location ?? ''}`);
        bounds.push([s.latitude, s.longitude]);
      });
      if (bounds.length) map.fitBounds(bounds, { padding: [20, 20] });
    }


    addMarkers(SAUNAS);
</script>
